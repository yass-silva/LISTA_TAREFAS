// script.js
 
//Seleciona os elementos do HTML com os quais vamos interagir
const taskInput = document.getElementById('task-input');
const addTaskBtn = document.getElementById('add-task-btn');
const taskList = document.getElementById('task-list');
 
//Tenta carregar as tarefas do localStorage. Se n√£o houver nada, come√ßa com um array vazio.
//JSON.parse() transforma o texto guardado de volta em um objeto/array JavaScript.
let tasks = JSON.parse(localStorage.getItem('tasks')) || [];
 
//Fun√ß√£o para salvar as tarefas no localStorage.
//JSON.stringify() transforma nosso array de tarefas em uma string para poder ser guardado.
function saveTasks() {
    localStorage.setItem('tasks', JSON.stringify(tasks));
}
 
//Fun√ß√£o para renderizar (desenhar) a lista de tarefas na tela
function renderTasks() {
    //Limpa a lista atual para n√£o duplicar itens
    taskList.innerHTML = '';
 
    //Para cada tarefa no nosso array, cria um elemento <li> e o adiciona na lista <ul>
    tasks.forEach((taskText, index) => {
        const li = document.createElement('li');
        li.className = 'task-item';
 
        //O texto da tarefa
        const span = document.createElement('span');
        span.textContent = taskText;
 
        //√Årea para os bot√µes de a√ß√£o
        const actionsDiv = document.createElement('div');
        actionsDiv.className = 'action';
 
        //Bot√£o de Editar
        const editBtn = document.createElement('button');
        editBtn.innerHTML = '‚úè'; //icone de lapis
        editBtn.onclick = () => editTask(index);

        //Bot√£o de Remover
        const removeBtn = document.createElement('button');
        removeBtn.innerHTML = 'üóë';//√çcone da lixeira
        removeBtn.onclick = () => removeTask(index);
 
        //Adiciona os elementos na estrutura: <span> e bot√µes dentro do <li>
        actionsDiv.appendChild(editBtn);
        actionsDiv.appendChild(removeBtn);
        li.appendChild(span);
        li.appendChild(actionsDiv);
 
        //Adiciona o item <li> completo na lista <ul>
        taskList.appendChild(li);
    });
}
 
//Fun√ß√£o para adicionar uma nova tarefa
function addTask() {
    const taskText = taskInput.value.trim(); //Pega o texto e remove espa√ßos em branco
    if (taskText) { //verifica se o texto n√£o est√° vazio
        tasks.push(taskText); //Adiciona a nova tarefa ao nosso array
        taskInput.value = ''; //Limpa o campo de input
        saveTasks(); //Salva o array atualizado no localStorage
        renderTasks(); //Redesenhada a lista na tela
    }
}
 
//Fun√ß√£o para remover uma tarefa
/**
 * Remove uma tarefa ap√≥s pedir confirma√ß√£o ao usu√°rio
 * @param {number} index - A posi√ß√£o da tarefa a ser removida
 */
function removeTask(index){
    //Pega o texto da tarefa que ser√° exclu√≠do para ser usado na mensagem
    const taskText = tasks[index];
 
    //Cria a mensagem de confirma√ß√£o, inclindo um emojivde alerta
    const confirmationMessage = `ü§î Tem certeza que deseja remover a tarefa: "${taskText}"?`;

    //Exibe a caixa de di√°logo de confirma√ß√£o.
    //O c√≥digo dentro do 'if' s√≥ ser√° executado se o usu√°rio clicar em "ok".
    if(confirm(confirmationMessage)) {
        //Se o usu√°rio confirmou (clicou em "ok"):

        //Remove 1 item a partir do'index' do array.
        tasks.splice(index,1);

        //Salva o novo estado do array no localStorage.
        saveTasks();

        //Redesenha a lista na tela para refletir a remo√ß√£o.
        renderTasks();
    }
    //Se o usu√°rio clicar em "Cancelar", nada acontece e a fun√ß√£o termina.
}

//Fun√ß√£o para editar uma tarefa
function editTask(index) {
    const currentTask = tasks[index];
    const newTaskText = prompt('üìñ Edite sua tarefa:', currentTask); //Abre uma caixa de di√°logo

    if(newTaskText !== null && newTaskText.trim() !== '') {
        tasks[index] = newTaskText.trim(); //Atualiza a tarefa array
        saveTasks();
        renderTasks();
    }
}

//Adiciona o "ouvinte de evento" para o bot√£o. A fun√ß√£o addTask ser√° chamada ao clicar.
addTaskBtn.addEventListener('click', addTask);

//Permite adicionar tarefa apertando "ENTER" no teclado
taskInput.addEventListener('keypress', (e) =>{
    if (e.key === 'Enter'){
        addTask();
    }
});

//Renderiza as tarefas que j√° estavam salvas assim que a p√°gina carrega
renderTasks();
 